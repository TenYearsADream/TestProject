//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF.Demo.Clinet.WCF.Demo.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WCF.Demo.Model")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscribeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SubmitTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Discribe {
            get {
                return this.DiscribeField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscribeField, value) != true)) {
                    this.DiscribeField = value;
                    this.RaisePropertyChanged("Discribe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SubmitTime {
            get {
                return this.SubmitTimeField;
            }
            set {
                if ((this.SubmitTimeField.Equals(value) != true)) {
                    this.SubmitTimeField = value;
                    this.RaisePropertyChanged("SubmitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF.Demo.Service.IGet")]
    public interface IGet {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGet/DoWork", ReplyAction="http://tempuri.org/IGet/DoWorkResponse")]
        WCF.Demo.Clinet.WCF.Demo.Service.User DoWork(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGet/DoWork", ReplyAction="http://tempuri.org/IGet/DoWorkResponse")]
        System.Threading.Tasks.Task<WCF.Demo.Clinet.WCF.Demo.Service.User> DoWorkAsync(int UserID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetChannel : WCF.Demo.Clinet.WCF.Demo.Service.IGet, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClient : System.ServiceModel.ClientBase<WCF.Demo.Clinet.WCF.Demo.Service.IGet>, WCF.Demo.Clinet.WCF.Demo.Service.IGet {
        
        public GetClient() {
        }
        
        public GetClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCF.Demo.Clinet.WCF.Demo.Service.User DoWork(int UserID) {
            return base.Channel.DoWork(UserID);
        }
        
        public System.Threading.Tasks.Task<WCF.Demo.Clinet.WCF.Demo.Service.User> DoWorkAsync(int UserID) {
            return base.Channel.DoWorkAsync(UserID);
        }
    }
}
